{"mappings":"ACAA,a,S,qB,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,qB,C,E,G,M,O,C,G,O,qB,E,C,S,mB,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,C,S,uB,M,A,U,wI,C,S,qB,C,E,O,qB,I,mB,I,+B,I,sB,C,S,+B,C,C,C,E,G,G,G,A,U,O,E,O,qB,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,A,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,qB,E,G,CAEA,SAAS,SAAS,CAAM,EACtB,OAAO,EACJ,QAAQ,GACR,KAAK,CAAC,IACN,OAAO,GACP,GAAG,CAAC,SAAC,CAAA,CAAK,CAJb,EAKI,OAAO,EAAQ,GAAM,GAAK,AAAU,IAAV,EAAc,EAAM,IAAM,CACtD,GACC,OAAO,GACP,IAAI,CAAC,GACV,CAEA,IAAM,WAAc,qBAAG,SAAS,gBAAgB,CAAC,gBAC3C,gBAAkB,SAAS,aAAa,CAAC,qBACzC,kBAAoB,SAAS,aAAa,CAAC,uBAE7C,MAAQ,EAEP,0BAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,eAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAc,UAAA,CAAA,OAAA,QAAA,CAAA,GAAd,CAAA,CAAA,0BAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,0BAAA,CAAA,EAA0B,CAA1B,IAAM,EAAN,EAAA,KAAA,CACG,EAAS,OAAO,EAAK,WAAW,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,IAEjC,CAAA,UAAlB,OAAO,GAIX,CAAA,OAAS,CAAT,CACF,C,C,M,E,CARK,kBAAA,CAAA,EAAA,eAAA,C,Q,C,G,CAAA,AAAA,2BAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,kBAAA,MAAA,c,C,CAUL,IAAM,QAAU,KAAK,KAAK,CAAC,MAAQ,WAAW,MAAM,CAEpD,CAAA,gBAAgB,SAAS,CAAG,SAAS,OACrC,kBAAkB,SAAS,CAAG,SAAS","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction toFormat(number) {\n    return number.toString().split('').reverse().map(function(num, index) {\n        return index % 3 === 0 && index !== 0 ? num + ',' : num;\n    }).reverse().join('');\n}\nvar population = _to_consumable_array(document.querySelectorAll('.population'));\nvar totalPopulation = document.querySelector('.total-population');\nvar averagePopulation = document.querySelector('.average-population');\nvar total = 0;\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = population[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var elem = _step.value;\n        var number = Number(elem.textContent.split(',').join(''));\n        if (typeof number !== 'number') continue;\n        total += number;\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\nvar average = Math.round(total / population.length);\ntotalPopulation.innerHTML = toFormat(total);\naveragePopulation.innerHTML = toFormat(average);\n\n//# sourceMappingURL=js_get_data_DOM.4fb4355f.js.map\n","'use strict';\n\nfunction toFormat(number) {\n  return number\n    .toString()\n    .split('')\n    .reverse()\n    .map((num, index) => {\n      return index % 3 === 0 && index !== 0 ? num + ',' : num;\n    })\n    .reverse()\n    .join('');\n}\n\nconst population = [...document.querySelectorAll('.population')];\nconst totalPopulation = document.querySelector('.total-population');\nconst averagePopulation = document.querySelector('.average-population');\n\nlet total = 0;\n\nfor (const elem of population) {\n  const number = Number(elem.textContent.split(',').join(''));\n\n  if (typeof number !== 'number') {\n    continue;\n  }\n\n  total += number;\n}\n\nconst average = Math.round(total / population.length);\n\ntotalPopulation.innerHTML = toFormat(total);\naveragePopulation.innerHTML = toFormat(average);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_non_iterable_spread","TypeError","_to_consumable_array","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","toFormat","number","split","reverse","map","num","index","join","population","document","querySelectorAll","totalPopulation","querySelector","averagePopulation","total","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","elem","value","Number","textContent","err","return","average","Math","round","innerHTML"],"version":3,"file":"js_get_data_DOM.4fb4355f.js.map"}